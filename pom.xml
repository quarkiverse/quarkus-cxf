<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.quarkiverse</groupId>
        <artifactId>quarkiverse-parent</artifactId>
        <version>15</version>
    </parent>

    <groupId>io.quarkiverse.cxf</groupId>
    <artifactId>quarkus-cxf-parent</artifactId>
    <version>2.5.1-SNAPSHOT</version>
    <name>Quarkus CXF - Parent</name>

    <packaging>pom</packaging>

    <url>https://github.com/quarkiverse/quarkiverse-cxf</url>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>dufoli</id>
            <name>Olivier Dufour</name>
            <email>olivier dot duff at gmail(DOT)com</email>
        </developer>
        <developer>
            <id>dufgui</id>
            <name>Guillaume Dufour</name>
        </developer>
        <developer>
            <id>shumonsharif</id>
            <name>Shumon Sharif</name>
            <email>shumon.sharif@gmail.com</email>
        </developer>
    </developers>
    <properties>
        <!-- Primary dependencies -->
        <quarkus.version>3.5.1</quarkus.version>
        <quarkus-xmlsec.version>2.3.0</quarkus-xmlsec.version>
        <cxf.version>4.0.3</cxf.version>

        <!-- Other compile dependency versions (keep sorted alphabetically) -->
        <!-- Items annotated with @sync can be updated by running mvn cq:sync-versions -N -->
        <angus-mail.version>2.0.2</angus-mail.version>
        <assertj.version>3.24.2</assertj.version>
        <cxf.xjcplugins.version>4.0.0</cxf.xjcplugins.version><!-- @sync org.apache.cxf:cxf:${cxf.version} prop:cxf.xjc-utils.version -->
        <ehcache.version>3.10.8</ehcache.version>
        <glassfish.jaxb.version>4.0.3</glassfish.jaxb.version><!-- @sync io.quarkus:quarkus-bom:${quarkus.version} dep:org.glassfish.jaxb:jaxb-runtime -->
        <jakarta.mail-api.version>2.1.2</jakarta.mail-api.version><!-- @sync org.eclipse.angus:all:${angus-mail.version} prop:mail-api.version -->
        <jakarta.jws-api.version>3.0.0</jakarta.jws-api.version><!-- @sync org.apache.cxf:cxf-parent:${cxf.version} prop:cxf.jakarta.jwsapi.version -->
        <jakarta.xml.soap-api.version>2.0.1</jakarta.xml.soap-api.version><!-- @sync org.apache.cxf:cxf-parent:${cxf.version} prop:cxf.jakarta.soapapi.version -->
        <jakarta.xml.ws-api.version>3.0.1</jakarta.xml.ws-api.version><!-- @sync org.apache.cxf:cxf-parent:${cxf.version} prop:cxf.jakarta.wsapi.version -->
        <neethi.version>3.2.0</neethi.version><!-- @sync org.apache.cxf:cxf-parent:${cxf.version} prop:cxf.neethi.version -->
        <mimepull.version>1.10.0</mimepull.version>
        <saaj-impl.version>2.0.1</saaj-impl.version><!-- @sync org.apache.cxf:cxf-parent:${cxf.version} prop:cxf.saaj-impl.version -->
        <slf4j.version>2.0.6</slf4j.version><!-- @sync io.quarkus:quarkus-bom:${quarkus.version} dep:org.slf4j:slf4j-api -->
        <stax2.version>4.2.1</stax2.version><!-- @sync com.fasterxml.woodstox:woodstox-core:${woodstox-core.version} dep:org.codehaus.woodstox:stax2-api -->
        <woodstox-core.version>6.5.1</woodstox-core.version>
        <wss4j.version>3.0.2</wss4j.version><!-- We may ocassionally want to use a bugfix version of WSS4J that is newer than the one used by CXF -->

        <supported-maven.versions>[3.6.2,)</supported-maven.versions>

        <cq-maven-plugin.version>4.4.6</cq-maven-plugin.version>
        <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
        <groovy.version>3.0.19</groovy.version>
        <maven-build-cache-extension.version>1.0.1</maven-build-cache-extension.version>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <keytool-maven-plugin.version>1.7</keytool-maven-plugin.version>
        <maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.2.2</maven-surefire-plugin.version>
        <quarkus-platform-bom-plugin.version>0.0.51</quarkus-platform-bom-plugin.version>
        <rpkgtests-maven-plugin.version>1.0.0</rpkgtests-maven-plugin.version>

        <!-- maven-compiler-plugin -->
        <maven.compiler.release>11</maven.compiler.release>

        <!-- maven-enforcer-plugin -->
        <enforce-non-deployment.skip>false</enforce-non-deployment.skip>

        <!-- keytool-maven-plugin -->
        <keytool.skip>false</keytool.skip>

    </properties>

    <scm>
        <url>https://github.com/quarkiverse/quarkiverse-cxf</url>
        <connection>scm:git:https://github.com/quarkiverse/quarkiverse-cxf.git</connection>
        <developerConnection>scm:git:https://github.com/quarkiverse/quarkiverse-cxf.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>bom</module>
        <module>extensions</module>
        <module>docs</module>
        <module>bom-test</module>
        <module>test-util</module>
        <module>integration-tests</module>
        <module>test-list</module>
    </modules>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.extensions</groupId>
                <artifactId>maven-build-cache-extension</artifactId>
                <version>${maven-build-cache-extension.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-codegen-plugin</artifactId>
                    <version>${cxf.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${maven-eclipse-plugin.version}</version>
                    <configuration>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>groovy-maven-plugin</artifactId>
                    <version>${groovy-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy-all</artifactId>
                            <version>${groovy.version}</version>
                            <type>pom</type>
                            <exclusions>
                                <exclusion>
                                    <!-- groovy-testng depends on testng 7.2.0 which is not on maven central -->
                                    <groupId>org.codehaus.groovy</groupId>
                                    <artifactId>groovy-testng</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>keytool-maven-plugin</artifactId>
                    <version>${keytool-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-idea-plugin</artifactId>
                    <version>${maven-idea-plugin.version}</version>
                    <configuration>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.l2x6.rpkgtests</groupId>
                    <artifactId>rpkgtests-maven-plugin</artifactId>
                    <version>${rpkgtests-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-extension-maven-plugin</artifactId>
                    <version>${quarkus.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>extension-descriptor</goal>
                            </goals>
                            <phase>compile</phase>
                            <configuration>
                                <deployment>${project.groupId}:${project.artifactId}-deployment:${project.version}
                                </deployment>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.l2x6.cq</groupId>
                    <artifactId>cq-maven-plugin</artifactId>
                    <version>${cq-maven-plugin.version}</version>
                    <configuration>
                        <templatesUriBase>file:${maven.multiModuleProjectDirectory}/src/build/doc-templates</templatesUriBase>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-enforcer-rules</artifactId>
                        <version>${quarkus.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${maven.compiler.release}</version>
                                </requireJavaVersion>
                                <dependencyConvergence />
                                <requireMavenVersion>
                                    <version>${supported-maven.versions}</version>
                                </requireMavenVersion>
                                <externalRules>
                                    <location>classpath:enforcer-rules/quarkus-require-maven-version.xml</location>
                                </externalRules>
                                <externalRules>
                                    <location>classpath:enforcer-rules/quarkus-banned-dependencies.xml</location>
                                </externalRules>
                                <externalRules>
                                    <location>${maven.multiModuleProjectDirectory}/src/build/enforcer-rules/quarkus-cxf-banned-dependencies.xml</location>
                                </externalRules>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>update-github-workflows</id>
                        <inherited>false</inherited>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <!-- A Groovy script that updates the list of integration test modules in -->
                            <!-- .github/workflows/build.yml based on the real state in integration-tests -->
                            <!-- directory -->
                            <source>
                                import java.nio.file.Files
                                import java.nio.file.Path
                                import java.nio.file.Paths

                                def buildYaml = '.github/workflows/build.yml'
                                def buildXmlPath = project.basedir.toPath().resolve(buildYaml)
                                def buildXmlSource = buildXmlPath.getText('UTF-8')
                                def pattern = java.util.regex.Pattern.compile('testModule: *\\[([^\\]]*)\\]')
                                def matcher = pattern.matcher(buildXmlSource)
                                if (!matcher.find()) {
                                    throw new IllegalStateException('Pattern ' + pattern + ' does not match ' + buildXmlPath)
                                }
                                def foundTestModules = matcher.group(1)

                                def expectedTestModules;
                                def iTestsDir = project.basedir.toPath().resolve('integration-tests')
                                try (java.util.stream.Stream files = Files.list(iTestsDir)) {
                                    expectedTestModules = files
                                        .filter(path -&gt; Files.isRegularFile(iTestsDir.resolve(path).resolve('pom.xml')))
                                        .map(Path::getFileName)
                                        .map(Path::toString)
                                        .sorted()
                                        .collect(java.util.stream.Collectors.joining(', '))
                                }
                                if (!foundTestModules.equals(expectedTestModules)) {
                                    println('Updating testModule attribute in ' + buildYaml + ':\n  old: ' + foundTestModules + '\n  new: '+expectedTestModules)
                                    def newSource = new StringBuilder()
                                    matcher.appendReplacement(newSource, 'testModule: ['+ expectedTestModules +']')
                                    matcher.appendTail(newSource)
                                    buildXmlPath.setText(newSource.toString(), 'UTF-8')
                                } else {
                                    println('testModule attribute in ' + buildYaml + ' is up to date')
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>format</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.l2x6.cq</groupId>
                        <artifactId>cq-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>format-poms</id>
                                <inherited>false</inherited>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <updateVirtualDependencies>
                                        <updateVirtualDependency>
                                            <basedir>${project.basedir}</basedir>
                                            <includes>
                                                <include>integration-tests/*/pom.xml</include>
                                            </includes>
                                        </updateVirtualDependency>
                                    </updateVirtualDependencies>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <enforcer.skip>true</enforcer.skip>
                <formatter.skip>true</formatter.skip>
                <impsort.skip>true</impsort.skip>
                <skipTests>true</skipTests>
                <quarkus.build.skip>true</quarkus.build.skip>
            </properties>
        </profile>
    </profiles>

</project>
