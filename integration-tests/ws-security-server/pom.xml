<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.quarkiverse.cxf</groupId>
        <artifactId>quarkus-cxf-integration-tests</artifactId>
        <version>1.6.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>quarkus-cxf-integration-test-ws-security-server</artifactId>

    <name>Quarkus CXF Extension - Integration Test - WS Security Server</name>

    <dependencies>
        <dependency>
            <groupId>io.quarkiverse.cxf</groupId>
            <artifactId>quarkus-cxf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.cxf</groupId>
            <artifactId>quarkus-cxf-rt-ws-security</artifactId>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.cxf</groupId>
            <artifactId>quarkus-cxf-test-util</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
                <configuration>
                    <keypass>password</keypass>
                    <validity>365</validity>
                    <keyalg>RSA</keyalg>
                    <keysize>1024</keysize>
                    <storepass>password</storepass>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-cxfca-keypair</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <alias>cxfca</alias>
                            <dname>CN=cxfca, OU=eng, O=apache.org</dname>
                            <exts>
                                <ext>bc:c=ca:true,pathlen:2147483647</ext>
                                <ext>IssuerAlternativeName=DNS:NOT-FOR-PRODUCTION-USE</ext>
                            </exts>
                            <keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
                        </configuration>
                    </execution>
                    <execution>
                        <id>export-cxfca-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exportCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>cxfca</alias>
                            <keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
                            <rfc>true</rfc>
                            <file>${project.build.outputDirectory}/cxfca.pem</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-alice-keypair</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <alias>alice</alias>
                            <dname>CN=alice, OU=eng, O=apache.org</dname>
                            <exts>
                                <ext>IssuerAlternativeName=DNS:NOT-FOR-PRODUCTION-USE</ext>
                                <ext>SubjectAlternativeName=DNS:localhost,IP:127.0.0.1</ext>
                            </exts>
                            <keystore>${project.build.outputDirectory}/alice.jks</keystore>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-bob-keypair</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generateKeyPair</goal>
                        </goals>
                        <configuration>
                            <alias>bob</alias>
                            <dname>CN=bob, OU=eng, O=apache.org</dname>
                            <exts>
                                <ext>IssuerAlternativeName=DNS:NOT-FOR-PRODUCTION-USE</ext>
                                <ext>SubjectAlternativeName=DNS:localhost,IP:127.0.0.1</ext>
                            </exts>
                            <keystore>${project.build.outputDirectory}/bob.jks</keystore>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-alice-certificate-request</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generateCertificateRequest</goal>
                        </goals>
                        <configuration>
                            <alias>alice</alias>
                            <keystore>${project.build.outputDirectory}/alice.jks</keystore>
                            <file>${project.build.outputDirectory}/alice.csr</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-alice-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generateCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>cxfca</alias>
                            <keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
                            <rfc>true</rfc>
                            <infile>${project.build.outputDirectory}/alice.csr</infile>
                            <outfile>${project.build.outputDirectory}/alice.pem</outfile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-bob-certificate-request</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generateCertificateRequest</goal>
                        </goals>
                        <configuration>
                            <alias>bob</alias>
                            <keystore>${project.build.outputDirectory}/bob.jks</keystore>
                            <file>${project.build.outputDirectory}/bob.csr</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-bob-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generateCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>cxfca</alias>
                            <keystore>${project.build.outputDirectory}/cxfca.jks</keystore>
                            <rfc>true</rfc>
                            <infile>${project.build.outputDirectory}/bob.csr</infile>
                            <outfile>${project.build.outputDirectory}/bob.pem</outfile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>import-cxfca-certificate-to-alice</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>cxfca</alias>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <keystore>${project.build.outputDirectory}/alice.jks</keystore>
                            <file>${project.build.outputDirectory}/cxfca.pem</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>import-cxfca-certificate-to-bob</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>cxfca</alias>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <keystore>${project.build.outputDirectory}/bob.jks</keystore>
                            <file>${project.build.outputDirectory}/cxfca.pem</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>import-alice-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>alice</alias>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <keystore>${project.build.outputDirectory}/alice.jks</keystore>
                            <file>${project.build.outputDirectory}/alice.pem</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>import-bob-certificate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>bob</alias>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <keystore>${project.build.outputDirectory}/bob.jks</keystore>
                            <file>${project.build.outputDirectory}/bob.pem</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>import-bob-certificate-to-alice</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>bob</alias>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <keystore>${project.build.outputDirectory}/alice.jks</keystore>
                            <file>${project.build.outputDirectory}/bob.pem</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>import-alice-certificate-to-bob</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>importCertificate</goal>
                        </goals>
                        <configuration>
                            <alias>alice</alias>
                            <trustcacerts>true</trustcacerts>
                            <noprompt>true</noprompt>
                            <keystore>${project.build.outputDirectory}/bob.jks</keystore>
                            <file>${project.build.outputDirectory}/alice.pem</file>
                        </configuration>
                    </execution>
<!--                Uncomment execution block below for local testing -->
<!--                    <execution>-->
<!--                        <id>list</id>-->
<!--                        <phase>generate-sources</phase>-->
<!--                        <goals>-->
<!--                            <goal>list</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <verbose>true</verbose>-->
<!--                            <keystore>${project.build.outputDirectory}/bob.jks</keystore>-->
<!--                        </configuration>-->
<!--                    </execution>-->
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
                <quarkus.native.report-errors-at-runtime>true</quarkus.native.report-errors-at-runtime>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>