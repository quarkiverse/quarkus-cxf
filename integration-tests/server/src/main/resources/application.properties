# tag::first-web-service.adoc[]
# The context path under which all services will be available
quarkus.cxf.path=/soap

# Publish "HelloService" under the context path /${quarkus.cxf.path}/hello
quarkus.cxf.endpoint."/hello".implementor=io.quarkiverse.cxf.it.server.HelloServiceImpl
quarkus.cxf.endpoint."/hello".features=org.apache.cxf.ext.logging.LoggingFeature
# end::first-web-service.adoc[]

# tag::soap-payloads-with-jaxb.adoc[]
quarkus.cxf.endpoint."/fruits".implementor=io.quarkiverse.cxf.it.server.FruitServiceImpl
quarkus.cxf.endpoint."/fruits".features=org.apache.cxf.ext.logging.LoggingFeature
# end::soap-payloads-with-jaxb.adoc[]

# Publish "GreetingWebService" at relative address /${quarkus.cxf.path}/greeting
quarkus.cxf.endpoint."/greeting".implementor=io.quarkiverse.cxf.it.server.GreetingWebServiceImpl

# Publish "GreetingWebService" at relative address /${quarkus.cxf.path}/greeting-no-intf
quarkus.cxf.endpoint."/greeting-no-intf".implementor=io.quarkiverse.cxf.it.server.GreetingWebServiceNoIntf

# Publish "GreetingWebService" with JAX-WS SOAP Handler at /${quarkus.cxf.path}/greeting-soap-handler
quarkus.cxf.endpoint."/greeting-soap-handler".implementor=io.quarkiverse.cxf.it.server.GreetingWebServiceImpl
quarkus.cxf.endpoint."/greeting-soap-handler".handlers=io.quarkiverse.cxf.it.server.GreetingSOAPHandler

quarkus.cxf.endpoint."/faulty-hello".implementor=io.quarkiverse.cxf.it.server.FaultyHelloServiceImpl

#
# Providers
#

# Publish the various provider implementations
quarkus.cxf.endpoint."/source-payload".implementor=io.quarkiverse.cxf.it.server.provider.SourcePayloadProvider
quarkus.cxf.endpoint."/soap-message".implementor=io.quarkiverse.cxf.it.server.provider.SOAPMessageProvider
quarkus.cxf.endpoint."/source-message".implementor=io.quarkiverse.cxf.it.server.provider.SourceMessageProvider
quarkus.cxf.endpoint."/stream-source-payload".implementor=io.quarkiverse.cxf.it.server.provider.StreamSourcePayloadProvider


#
# CLIENTS
#

# A client to service "/soap/greeting" (see above), use it like
#
#   @Inject @CXFClient GreetingWebService greetingWs;
#
quarkus.cxf.client."greeting".client-endpoint-url=http://localhost:8081/soap/greeting
quarkus.cxf.client."greeting".service-interface=io.quarkiverse.cxf.it.server.GreetingWebService


# A client to service "/soap/greeting" (see above), use it like
#
#   @Inject @CXFClient GreetingClientWebService myclient; or like
#   @Inject @CXFClient("greetingclient") GreetingClientWebService myclient;
#
quarkus.cxf.client."greetingclient".client-endpoint-url=http://localhost:8081/soap/greeting
quarkus.cxf.client."greetingclient".service-interface=io.quarkiverse.cxf.it.server.GreetingClientWebService

# Workaround for https://github.com/quarkusio/quarkus/issues/31646
# Should not be needed with the Quarkus release coming after 3.0.0.Alpha5
quarkus.jaxb.validate-jaxb-context = false

