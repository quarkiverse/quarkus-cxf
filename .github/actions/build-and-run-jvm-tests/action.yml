name: build-and-run-jvm-tests
description: |
   Build the project and run JVM tests. 
   Prerequisites: 
     * java must be installed'

inputs:
  run-native-tests:
    description: |
      If true, the native tests will be run in addition to JVM tests; otherwise only JVM tests will be run
    default: 'false'
  upload-local-maven-repo-archive:
    description: |
      If true, the local Maven repository will be tar-gzipped and uploaded using actions/upload-artifact;
      otherwise it will neither be tar-gzipped nor uploaded
    default: 'true'
  token:
    description: "The token to use to authenticate against GitHub API"
    required: true

runs:
  using: 'composite'
  steps:

    - name: Ensure mvn cq:sync-versions -N causes no changes
      shell: bash
      run: |
        ./mvnw cq:sync-versions -Dcq.simpleElementWhitespace=AUTODETECT_PREFER_SPACE -N -ntp
        [[ -z $(git status --porcelain | grep -v antora.yml) ]] || { echo 'There are uncommitted changes'; git status; git diff; exit 1; }

    - name: mvn -B formatter:validate install
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: ./mvnw -B formatter:validate install -fae -ntp ${{ inputs.run-native-tests == 'true' && '-Pnative -Dquarkus.native.container-build' || '' }}

    # Same as the previous but only JVM tests and different default ConduitFactory
    - name: QUARKUS_CXF_DEFAULT_HTTP_CONDUIT_FACTORY=URLConnectionHTTPConduitFactory mvn -B test
      shell: bash
      env: 
        GITHUB_TOKEN: ${{ inputs.token }}
        QUARKUS_CXF_DEFAULT_HTTP_CONDUIT_FACTORY: URLConnectionHTTPConduitFactory
      run: ./mvnw -B clean install -fae -ntp ${{ inputs.run-native-tests == 'true' && '-Pnative -Dquarkus.native.container-build' || '' }}

    - name: Fail if there are uncommitted changes
      shell: bash
      run: |
        [[ -z $(git status --porcelain | grep -v antora.yml) ]] || { echo 'There are uncommitted changes'; git status; git diff; exit 1; }

    - name: Create ${{ runner.temp }}/maven-repo.tgz
      if: ${{ inputs.upload-local-maven-repo-archive == 'true' }}
      shell: bash
      run: |
        tar -czf ${{ runner.temp }}/maven-repo.tgz -C ~ .m2/repository
    - name: Upload ${{ runner.temp }}/maven-repo.tgz
      if: ${{ inputs.upload-local-maven-repo-archive == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: maven-repo
        path: ${{ runner.temp }}/maven-repo.tgz
        retention-days: 1

    - name: Avoid caching SNAPSHOT artifacts in local Maven repository
      shell: bash
      run: |
        # remove SNAPSHOT artifacts
        find ~/.m2/repository -type d -name '*-SNAPSHOT' -exec rm -r {} +
