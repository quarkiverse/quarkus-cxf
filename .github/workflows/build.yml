name: Build

on:
  push:
    branches:
      - "master"
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

jobs:
  build:
    name: Build on ${{ matrix.os }} 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false
        if: startsWith(matrix.os, 'windows')

      - uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Extract GraalVM version
        id: graalvm
        run: |
          echo "::set-output name=version::$(mvn -pl runtime -ntp dependency:list -DincludeArtifactIds=graal-sdk | grep graal-sdk | cut -d: -f4)"
          
      - name: Setup GraalVM ${{ steps.graalvm.outputs.version }}
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ steps.graalvm.outputs.version }}
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (JVM + native)
        run: mvn -B formatter:validate verify -Dnative
