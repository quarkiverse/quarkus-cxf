name: Build

on:
  push:
    branches:
      - main
      - "[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.x"
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'README*'
  pull_request:
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-and-run-jvm-tests:
    if: startsWith(github.head_ref, 'trigger-release-') == false
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: mvn -B formatter:validate install
      run: ./mvnw -B formatter:validate install

    - name: 'Upload generated Antora docs site'
      uses: actions/upload-artifact@v3
      with:
        name: docs
        path: docs/target/site

    - name: Fail if there are uncommitted changes
      shell: bash
      run: |
        [[ -z $(git status --porcelain | grep -v antora.yml) ]] || { echo 'There are uncommitted changes'; git status; exit 1; }

  native-tests:
    strategy:
      fail-fast: false
      matrix:
        testModule: [client, logging, mtom, mtom-awt, server, ws-addressing, ws-rm, ws-security-client, ws-security-server, ws-trust]
    name: ${{matrix.testModule}} native tests
    needs: build-and-run-jvm-tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: cd integration-tests/${{matrix.testModule}} && mvn verify -Pnative
      # Skip native tests for CodeQL Security Scans
      if: "${{ env.SKIP_NATIVE_TESTS != 'true' }}"
      run: cd integration-tests/${{matrix.testModule}} && ../../mvnw -B verify -Pnative -Dquarkus.native.container-build=true
